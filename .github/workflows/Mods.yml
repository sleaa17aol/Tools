name: 同步上游 Module

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: "15 */12 * * *"  # 每12小时运行一次，00:15和12:15 UTC

jobs:
  Fork-Filter-List:
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Shanghai'  # 设置时区为上海

    steps:
    - name: 检出目标仓库
      # 克隆目标仓库（Tools）
      uses: actions/checkout@v4.1.0
      with:
        repository: thNylHx/Tools
        path: Tools-repo

    - name: 设置 Git 配置
      # 配置 Git 用户名和邮箱
      run: |
        git config --global user.name "${{ secrets.USERNAME }}"
        git config --global user.email "${{ secrets.EMAIL }}"
    
    - name: 克隆 LoonKissSurge 仓库
      # 始终执行克隆 LoonKissSurge 仓库的操作
      run: |
        rm -rf "${{ github.workspace }}/LoonKissSurge"  # 确保清空目录
        git clone "https://github.com/QingRex/LoonKissSurge.git" "${{ github.workspace }}/LoonKissSurge" || { echo "克隆失败，退出。"; exit 1; }

    - name: 克隆 Tools 仓库
      # 始终执行克隆 Tools 仓库的操作
      run: |
        rm -rf "${{ github.workspace }}/Tools"  # 确保清空目录
        git clone "https://github.com/${{ secrets.USERNAME }}/Tools.git" "${{ github.workspace }}/Tools" || { echo "克隆失败，退出。"; exit 1; }
    
    - name: 重建 Surge Mods 目录
      # 重建 Surge/Mods 目录
      run: |
        SURGE_MODS_DIR="${{ github.workspace }}/Tools/Surge/Mods"
        rm -rf "$SURGE_MODS_DIR" && mkdir -p "$SURGE_MODS_DIR"
        echo "已重建 Surge/Mods 目录。"

    - name: 复制并重命名 Beta 文件类容
      # 从 LoonKissSurge 仓库的 Beta 目录复制文件到 Tools 仓库的 Surge/Mods 目录
      run: |
        BETA_DIR="${{ github.workspace }}/LoonKissSurge/Surge/Beta"
        if [ -d "$BETA_DIR" ]; then
          cp -r "$BETA_DIR/"* "$SURGE_MODS_DIR" && echo "已拷贝 Beta 文件至 Surge/Mods"

          echo "匹配的文件："
          ls "$SURGE_MODS_DIR"/*.sgmodule || echo "没有找到 .sgmodule 文件"
          
          for file in "$SURGE_MODS_DIR"/*.sgmodule; do
            [ -e "$file" ] || continue
            new_name=$(echo "$file" | sed 's/去广告//g; s/\.beta//g')
            [ "$file" != "$new_name" ] && mv "$file" "$new_name" && echo "重命名: $file -> $new_name"
          done
        else
          echo "未找到 Beta 目录，退出。"
          exit 1
        fi

    - name: 为 Tools 仓库设置远程 URL
      # 设置远程仓库的 URL，使用 GitHub Token 进行身份验证
      run: |
        cd "${{ github.workspace }}/Tools"
        git remote set-url origin "https://x-access-token:${{ secrets.TOKEN }}@github.com/${{ secrets.USERNAME }}/Tools.git"

    - name: 检查更改并推送到 GitHub Tools 仓库
      # 检查本地仓库是否有变更，并将变更推送到 GitHub
      run: |
        cd "${{ github.workspace }}/Tools"
        git fetch origin
        if [ -n "$(git status --porcelain)" ]; then
          git add -A
          git commit -m "Auto Update $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin main && echo "同步完成！"
        else
          echo "没有本地变更，无需同步。"
        fi
        
    - name: 清理工作流
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 5